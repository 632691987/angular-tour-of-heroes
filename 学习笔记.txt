1, 建立新的项目
ng new angular-tour-of-heroes

2, 启动项目
cd angular-tour-of-heroes
ng serve --open

3, 绑定值
在 ts 的属性里面，加上

export class AppComponent {
  title = 'Tour of Heroes';// 加在这里
}

于是在 HTML 上面就可以
{{title}}

4, 添加一个组件
ng generate component heroes

于是，CLI 创建了一个新的文件夹 src/app/heroes/，并生成了 HeroesComponent 的四个文件。
heroes.component.html
heroes.component.scss
heroes.component.ts
heroes.component.spec.ts

5, 引用外界的类
import { Component, OnInit } from '@angular/core';
import { Hero } from '../hero';

6, 声明一个对象
  hero: Hero = {
    id: 1,
    name: 'Windstorm'
  }

7, 在 JSP 上面的 fmt 相当与 Angular 的管道这个概念
DatePipe：根据本地环境中的规则格式化日期值。例如：                     | {{ hero.birthday | date:"MM/dd/yy" }}
UpperCasePipe：把文本全部转换成大写。                               | {{hero.name | uppercase}}
LowerCasePipe ：把文本全部转换成小写。                              | {{hero.name | lowercase}}
CurrencyPipe ：把数字转换成货币字符串，根据本地环境中的规则进行格式化。   | {{ 123456 | currency }} 显示 $123,456.00
DecimalPipe：把数字转换成带小数点的字符串，根据本地环境中的规则进行格式化。| {{ 123456 | number }}
PercentPipe ：把数字转换成百分比字符串，根据本地环境中的规则进行格式化。  | {{hero.id | percent}}
JsonPipe: 把一个值转换成 JSON 字符串格式。在调试时很有用。             | {{ hero | json }} // { "id": 1, "name": "Windstorm", "birthday": "2020-08-04T22:21:56.685Z" }

8, 双向绑定变量
<input [(ngModel)]="hero.name"/>
前提：要假设背后的ts 文件有一个 hero 的对象
使用步骤：
1, 在app.module.ts 处引入
import { FormsModule } from '@angular/forms';
2, 在 imports 引入 FormsModule

9, for 循环
<li *ngFor="let hero of heroes">
注意：
==> 不用引入其他。
==> heroes 是背后的数组变量
==> ngFor 是一个指令 (directive), 指令前面都是 *

10, 绑定事件
==> 在需要绑定的 html 元素的地方使用 (), 里面是要绑定的事件名称，例如 (click), 最后结果例如： (click)="onSelect(hero)"
==> 在后台处，使用, 注意元素对应在函数的参数列表中
  onSelect(hero: Hero) {
    this.userSelectedHero = hero;
    console.log(hero);
  }

11, ngIf 也是一个指令，是说判断这个后台 ts 使用的变量是否为 undefined 或者 null
<div *ngIf="userSelectedHero">

    <h2>{{userSelectedHero.name | uppercase}} Details</h2>
    <div><span>id: </span>{{userSelectedHero.id}}</div>
    <div>
        <label>name:
      <input [(ngModel)]="userSelectedHero.name" placeholder="name"/>
    </label>
    </div>

</div>

12, 模板语言
===》 可以绑定 html 元素，并且赋值
<button [disabled]="isUnchanged">Save</button> // 这里， disabled 就是属性值， isUnchanged 是后台的
<div [ngClass]="{'special': isSpecial}"></div> // 这里， class    就是属性值， {'special': isSpecial} ==> isSpecial 是 ts 后台变量，如果为 true, 那么 add class 'special'
<div [class.special]="isSpecial">Special</div> 这里，当 isSpecial 为真，那么 add 'special '这个 class
<button [style.color]="isSpecial ? 'red' : 'green'"> 直接改变 style
<img src="images/ng-logo.png" [src]="heroImageUrl">
<button bind-disabled="isUnchanged" on-click="onSave($event)">Disabled Cancel</button>
<button [disabled]="!canSave" (click)="onSave($event)">Enabled Save</button>